/*
 * pepipost_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for TimeperiodEnum enum
 */
type TimeperiodEnum int

/**
 * Value collection for TimeperiodEnum enum
 */
const (
    Timeperiod_DAILY TimeperiodEnum = 1 + iota
    Timeperiod_WEEKLY
    Timeperiod_MONHTLY
)

func (r TimeperiodEnum) MarshalJSON() ([]byte, error) { 
    s := TimeperiodEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *TimeperiodEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  TimeperiodEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts TimeperiodEnum to its string representation
 */
func TimeperiodEnumToValue(timeperiodEnum TimeperiodEnum) string {
    switch timeperiodEnum {
        case Timeperiod_DAILY:
    		return "daily"		
        case Timeperiod_WEEKLY:
    		return "weekly"		
        case Timeperiod_MONHTLY:
    		return "monhtly"		
        default:
        	return "daily"
    }
}

/**
 * Converts TimeperiodEnum Array to its string Array representation
*/
func TimeperiodEnumArrayToValue(timeperiodEnum []TimeperiodEnum) []string {
    convArray := make([]string,len( timeperiodEnum))
    for i:=0; i<len(timeperiodEnum);i++ {
        convArray[i] = TimeperiodEnumToValue(timeperiodEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func TimeperiodEnumFromValue(value string) TimeperiodEnum {
    switch value {
        case "DAILY":
            return Timeperiod_DAILY
        case "WEEKLY":
            return Timeperiod_WEEKLY
        case "MONHTLY":
            return Timeperiod_MONHTLY
        default:
            return Timeperiod_DAILY
    }
}
