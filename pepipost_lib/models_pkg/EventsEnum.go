/*
 * pepipost_lib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package models_pkg

import(
    "encoding/json"
)

/**
 * Type definition for EventsEnum enum
 */
type EventsEnum int

/**
 * Value collection for EventsEnum enum
 */
const (
    Events_PROCESSED EventsEnum = 1 + iota
    Events_SENT
    Events_OPEN
    Events_CLICK
    Events_UNSUBSCRIBE
    Events_BOUNCE
    Events_SOFTBOUNCE
    Events_SPAM
    Events_INVALID
    Events_DROPPED
    Events_HARDBOUNCE
)

func (r EventsEnum) MarshalJSON() ([]byte, error) { 
    s := EventsEnumToValue(r)
    return json.Marshal(s) 
} 

func (r *EventsEnum) UnmarshalJSON(data []byte) error { 
    var s string 
    json.Unmarshal(data, &s)
    v :=  EventsEnumFromValue(s)
    *r = v 
    return nil 
 } 


/**
 * Converts EventsEnum to its string representation
 */
func EventsEnumToValue(eventsEnum EventsEnum) string {
    switch eventsEnum {
        case Events_PROCESSED:
    		return "processed"		
        case Events_SENT:
    		return "sent"		
        case Events_OPEN:
    		return "open"		
        case Events_CLICK:
    		return "click"		
        case Events_UNSUBSCRIBE:
    		return "unsubscribe"		
        case Events_BOUNCE:
    		return "bounce"		
        case Events_SOFTBOUNCE:
    		return "softbounce"		
        case Events_SPAM:
    		return "spam"		
        case Events_INVALID:
    		return "invalid"		
        case Events_DROPPED:
    		return "dropped"		
        case Events_HARDBOUNCE:
    		return "hardbounce"		
        default:
        	return "processed"
    }
}

/**
 * Converts EventsEnum Array to its string Array representation
*/
func EventsEnumArrayToValue(eventsEnum []EventsEnum) []string {
    convArray := make([]string,len( eventsEnum))
    for i:=0; i<len(eventsEnum);i++ {
        convArray[i] = EventsEnumToValue(eventsEnum[i])
    }
    return convArray
}


/**
 * Converts given value to its enum representation
 */
func EventsEnumFromValue(value string) EventsEnum {
    switch value {
        case "PROCESSED":
            return Events_PROCESSED
        case "SENT":
            return Events_SENT
        case "OPEN":
            return Events_OPEN
        case "CLICK":
            return Events_CLICK
        case "UNSUBSCRIBE":
            return Events_UNSUBSCRIBE
        case "BOUNCE":
            return Events_BOUNCE
        case "SOFTBOUNCE":
            return Events_SOFTBOUNCE
        case "SPAM":
            return Events_SPAM
        case "INVALID":
            return Events_INVALID
        case "DROPPED":
            return Events_DROPPED
        case "HARDBOUNCE":
            return Events_HARDBOUNCE
        default:
            return Events_PROCESSED
    }
}
